/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Excepciones.NoSePuedeEscribirArchivo;
import JP.*;
import RobertoPruebas.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFrame;

/**
 *
 * @author juampa
 */
public class Seguridad extends javax.swing.JPanel {
    public final static String marcaInicio="SCE";
    public final static String claveCifrado = "Sistema de Control Empresarial";
    private Conexion conexion;
    /**
     * Creates new form Seguridad
     */
    public Seguridad(Conexion conexion) {
        initComponents();  
        this.conexion=conexion;
        //Hacemos invisibles todos lo paneles que no deben mostrarse desde el inicio
        eliminarPanel.setVisible(false);
        ingresarPanel.setVisible(false);
        conexionPanel.setVisible(false);
        usuariosPanel1.setVisible(false);
        //Ponemos los paneles en el mismo punto, de tal manera que todos estén en el centro, y no regados en el JFrame
        ingresarPanel.setBounds(eliminarPanel.getBounds().x, eliminarPanel.getBounds().y, ingresarPanel.getBounds().width, ingresarPanel.getBounds().height);
        //ingresarPanel.setLocation(eliminarPanel.getBounds().x, eliminarPanel.getBounds().y);
        conexionPanel.setBounds(eliminarPanel.getBounds().x, eliminarPanel.getBounds().y,conexionPanel.getBounds().width,conexionPanel.getBounds().height);
        //conexionPanel.setLocation(eliminarPanel.getBounds().x, eliminarPanel.getBounds().y);
        this.validate();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conexionPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        passField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        ipField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bdField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        userField = new javax.swing.JTextField();
        guardarDBButton = new javax.swing.JLabel();
        passField1 = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        eliminarPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        usuariosCombo1 = new javax.swing.JComboBox<>();
        userEButton = new javax.swing.JLabel();
        ingresarPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        userIField = new javax.swing.JTextField();
        passIField = new javax.swing.JPasswordField();
        passIField2 = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        userIButtton = new javax.swing.JLabel();
        gesConButton = new javax.swing.JLabel();
        gesUsuariosButton = new javax.swing.JLabel();
        usuariosPanel1 = new javax.swing.JPanel();
        verUsElButton = new javax.swing.JLabel();
        verUsModButton = new javax.swing.JLabel();
        verUsInButton = new javax.swing.JLabel();
        logoutButton = new javax.swing.JLabel();
        Minimizar = new javax.swing.JLabel();
        Salir = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(940, 650));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        conexionPanel.setBackground(new java.awt.Color(0, 0, 0));
        conexionPanel.setForeground(new java.awt.Color(255, 255, 255));
        conexionPanel.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Usuario del SGBD:");

        passField.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Dirección del servidor:");

        ipField.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Contraseña:");

        bdField.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombre de la BD:");

        userField.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        guardarDBButton.setBackground(new java.awt.Color(255, 0, 0));
        guardarDBButton.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        guardarDBButton.setForeground(new java.awt.Color(255, 255, 255));
        guardarDBButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guardarDBButton.setText("Guardar");
        guardarDBButton.setOpaque(true);
        guardarDBButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarDBButtonMouseClicked(evt);
            }
        });

        passField1.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Confirme contraseña:");

        javax.swing.GroupLayout conexionPanelLayout = new javax.swing.GroupLayout(conexionPanel);
        conexionPanel.setLayout(conexionPanelLayout);
        conexionPanelLayout.setHorizontalGroup(
            conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conexionPanelLayout.createSequentialGroup()
                .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(conexionPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(passField1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                        .addGroup(conexionPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(userField)
                                .addComponent(bdField)
                                .addComponent(ipField, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                .addComponent(passField))))
                    .addGroup(conexionPanelLayout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(guardarDBButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        conexionPanelLayout.setVerticalGroup(
            conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conexionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(9, 9, 9)
                .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(passField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conexionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardarDBButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(conexionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, 390, -1));

        eliminarPanel.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Usuario:");

        usuariosCombo1.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        userEButton.setBackground(new java.awt.Color(255, 0, 0));
        userEButton.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        userEButton.setForeground(new java.awt.Color(255, 255, 255));
        userEButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userEButton.setText("Eliminar");
        userEButton.setOpaque(true);
        userEButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userEButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout eliminarPanelLayout = new javax.swing.GroupLayout(eliminarPanel);
        eliminarPanel.setLayout(eliminarPanelLayout);
        eliminarPanelLayout.setHorizontalGroup(
            eliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eliminarPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usuariosCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        eliminarPanelLayout.setVerticalGroup(
            eliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eliminarPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(eliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(usuariosCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        add(eliminarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 142, 380, -1));

        ingresarPanel.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nombre de Usuario:");

        userIField.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        passIField.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        passIField2.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contraseña:");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Confirmar Contraseña:");

        userIButtton.setBackground(new java.awt.Color(255, 0, 0));
        userIButtton.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        userIButtton.setForeground(new java.awt.Color(255, 255, 255));
        userIButtton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userIButtton.setText("Ingreso");
        userIButtton.setOpaque(true);
        userIButtton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userIButttonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ingresarPanelLayout = new javax.swing.GroupLayout(ingresarPanel);
        ingresarPanel.setLayout(ingresarPanelLayout);
        ingresarPanelLayout.setHorizontalGroup(
            ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ingresarPanelLayout.createSequentialGroup()
                .addGroup(ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ingresarPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passIField2, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(passIField)
                            .addComponent(userIField)))
                    .addGroup(ingresarPanelLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(userIButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ingresarPanelLayout.setVerticalGroup(
            ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ingresarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(userIField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passIField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ingresarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passIField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userIButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(ingresarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        gesConButton.setBackground(new java.awt.Color(255, 0, 0));
        gesConButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        gesConButton.setForeground(new java.awt.Color(255, 255, 255));
        gesConButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gesConButton.setText("Gestión de Conexión");
        gesConButton.setOpaque(true);
        gesConButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gesConButtonMouseClicked(evt);
            }
        });
        add(gesConButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 0, 200, 54));

        gesUsuariosButton.setBackground(new java.awt.Color(255, 0, 0));
        gesUsuariosButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        gesUsuariosButton.setForeground(new java.awt.Color(255, 255, 255));
        gesUsuariosButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gesUsuariosButton.setText("Gestión de Usuarios");
        gesUsuariosButton.setOpaque(true);
        gesUsuariosButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gesUsuariosButtonMouseClicked(evt);
            }
        });
        add(gesUsuariosButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 0, 200, 54));

        usuariosPanel1.setOpaque(false);

        verUsElButton.setBackground(new java.awt.Color(255, 0, 0));
        verUsElButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        verUsElButton.setForeground(new java.awt.Color(255, 255, 255));
        verUsElButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        verUsElButton.setText("Eliminación");
        verUsElButton.setOpaque(true);
        verUsElButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verUsElButtonMouseClicked(evt);
            }
        });

        verUsModButton.setBackground(new java.awt.Color(255, 0, 0));
        verUsModButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        verUsModButton.setForeground(new java.awt.Color(255, 255, 255));
        verUsModButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        verUsModButton.setText("Modificación");
        verUsModButton.setOpaque(true);

        verUsInButton.setBackground(new java.awt.Color(255, 0, 0));
        verUsInButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        verUsInButton.setForeground(new java.awt.Color(255, 255, 255));
        verUsInButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        verUsInButton.setText("Ingreso");
        verUsInButton.setOpaque(true);
        verUsInButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verUsInButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout usuariosPanel1Layout = new javax.swing.GroupLayout(usuariosPanel1);
        usuariosPanel1.setLayout(usuariosPanel1Layout);
        usuariosPanel1Layout.setHorizontalGroup(
            usuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usuariosPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(verUsInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(verUsModButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verUsElButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        usuariosPanel1Layout.setVerticalGroup(
            usuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usuariosPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(usuariosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verUsElButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verUsModButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verUsInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(usuariosPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        logoutButton.setBackground(new java.awt.Color(255, 0, 0));
        logoutButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutButton.setText("Log Out");
        logoutButton.setOpaque(true);
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });
        add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(557, 0, 200, 54));

        Minimizar.setForeground(new java.awt.Color(255, 255, 255));
        Minimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSCE/minus-symbol.png"))); // NOI18N
        Minimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizarMouseClicked(evt);
            }
        });
        add(Minimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, -1, -1));

        Salir.setBackground(new java.awt.Color(0, 0, 0));
        Salir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSCE/cancel (2).png"))); // NOI18N
        Salir.setOpaque(true);
        Salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalirMouseClicked(evt);
            }
        });
        add(Salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void guardarDBButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarDBButtonMouseClicked
       if(!ipField.getText().trim().equals("")&&!userField.getText().trim().equals("")&&!new String(passField.getPassword()).trim().equals("")&&!bdField.getText().equals("")){
            if(new String(passField.getPassword()).trim().equals(new String(passField1.getPassword()).trim())){
                try {
                    // Generamos una clave que queramos que tenga al menos 16 bytes adecuada para AES
                    Key key = new SecretKeySpec(claveCifrado.getBytes(),  0, 16, "AES");
                    // Se obtiene un cifrador AES
                    Cipher aes = Cipher.getInstance("AES/ECB/PKCS5Padding");
                    // Se inicializa el cifrador, se pone en modo de cifrado y se le envia la clave
                    aes.init(Cipher.ENCRYPT_MODE,key);
                    // Se encripta
                    byte[] encriptado=aes.doFinal(new String(passField.getPassword()).getBytes());
                    //Se crea un nuevo servidor, enviando los datos nuevos y se escribe la configuracion al archivo
                    Server server=new Server(ipField.getText(), userField.getText(),encriptado , bdField.getText());
                    server.escribirArchivo(Server.SERVER_CONFIG_DEFAULT_FILE);
                    DialogoOpcion dialogo = new DialogoOpcion(null, true, DialogoOpcion.ICONO_INFORMACION, "Escritura exitosa", "Archivo Escrito");  
                    dialogo.setVisible(true);
                    //Limpiamos el formulario
                    limpiar();
                } catch (NoSePuedeEscribirArchivo | NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IllegalBlockSizeException | BadPaddingException ex) {
                    DialogoOpcion dialogo = new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Escritura exitosa", ex.toString());  
                    dialogo.setVisible(true);
                }
            }
            else{
                DialogoOpcion dialogo = new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Llene los campos correctamente", "Las contraseñas no coinciden");  
                dialogo.setVisible(true);
                passField.setText("");
                passField1.setText("");
                passField.requestFocus();
            }
        }
        else{
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Error", "Debe llenar todos los campos");
            dialogo.setVisible(true);
        }
    }//GEN-LAST:event_guardarDBButtonMouseClicked

    private void userEButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userEButtonMouseClicked
        eliminarUser();
    }//GEN-LAST:event_userEButtonMouseClicked

    private void userIButttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userIButttonMouseClicked
        ingresoUserNuevo();
    }//GEN-LAST:event_userIButttonMouseClicked

    private void verUsElButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verUsElButtonMouseClicked
        try {
            //Limpiamos la lista de usuarios en el combo
            int tamano=usuariosCombo1.getModel().getSize();
            for (int i = 0; i < tamano; i++) {
                usuariosCombo1.removeItemAt(0);
            }
            //Obtenemos la lista de usuarios desde la BD, y luego los agregamos al combo
            ArrayList modelo= conexion.obtenerUsuarios();
            for(int i=0;i<modelo.size();i++){
                usuariosCombo1.addItem((String) modelo.get(i));
            }
            //Hacemos que no esté seleccionado ningún elemento del combo, y mostramos el panel
            usuariosCombo1.setSelectedIndex(-1);
            eliminarPanel.setVisible(true);
            usuariosPanel1.setVisible(false);
        } catch (SQLException ex) {
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Error", "Error:\n"+ex.toString());
            dialogo.setVisible(true);
        }
    }//GEN-LAST:event_verUsElButtonMouseClicked

    private void gesUsuariosButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gesUsuariosButtonMouseClicked
        //Mostramos el panel de gestión de usuarios, y deshabilitamos otras opciones
        usuariosPanel1.setVisible(true);
        gesConButton.setEnabled(false);
    }//GEN-LAST:event_gesUsuariosButtonMouseClicked

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        //Borramos el contenido del archivo de logueo, para que no vuelva a iniciarse la sesión
        BufferedWriter bw = null;
        try {
            bw = new BufferedWriter(new FileWriter(UsuarioG.LOGGED_USER_DEFAULT_FILE));
            bw.write("");
            bw.close();
        } catch (IOException ex) {
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Error", "Error:\n"+ex.toString());
            dialogo.setVisible(true);
        } finally {
            try {
                bw.close();
            } catch (IOException ex) {
                DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Error", "Error:\n"+ex.toString());
                dialogo.setVisible(true);
            }
        }
        // (Comentar/Descomentar una opción) Despues de borrar el archivo, mostramos de nuevo la ventana de login, o cerramos el programa
        //Opcion 1: cierra el programa
        System.exit(0);
        //Opcion 2: muestra de nuevo el login (aun infuncional)
        //Login l= new Login();
        //this.setVisible(false);
        //l.setVisible(true);
        
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void verUsInButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verUsInButtonMouseClicked
        ingresarPanel.setVisible(true);
        usuariosPanel1.setVisible(false);
    }//GEN-LAST:event_verUsInButtonMouseClicked

    private void gesConButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gesConButtonMouseClicked
        conexionPanel.setVisible(true);
        gesUsuariosButton.setEnabled(false);
    }//GEN-LAST:event_gesConButtonMouseClicked

    private void SalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMouseClicked
        System.exit(0);
    }//GEN-LAST:event_SalirMouseClicked

    private void MinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizarMouseClicked
        //Obtenemos los contenedores padres, hasta obtener el JFrame donde se está trabajando
        JFrame padre= (JFrame)this.getParent().getParent().getParent().getParent().getParent();
        //Se le manda la orden de minimizar
        padre.setExtendedState(1);
    }//GEN-LAST:event_MinimizarMouseClicked
    //Elimina un usuario, seleccionado en el combo
    private void eliminarUser(){
        //Verifica que haya un objeto seleccionado en el combo
        if(usuariosCombo1.getSelectedIndex()!=-1){
            DialogoOpcion diag= new DialogoOpcion(null,true,DialogoOpcion.ICONO_INTERROGANTE,"Eliminar usuarios","Realmente desea eliminar el usuario "+usuariosCombo1.getSelectedItem().toString());
            diag.setVisible(true);
            if(diag.isAceptar()){
                try {
                    //Manda la orden de eliminación a la BD
                    conexion.eliminarUsuario((String) usuariosCombo1.getSelectedItem());
                    //Muestra mensaje de borrado, y pone todo en estado normal
                    diag= new DialogoOpcion(null,true,DialogoOpcion.ICONO_INFORMACION,"Eliminar usuarios","Usuario eliminado");
                    diag.setVisible(true);
                    limpiar();
                } catch (SQLException ex) {
                    DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Error", "Error:\n"+ex.toString());
                    dialogo.setVisible(true);
                }
            }
            limpiar();
        }
    }
    /**
     * Ingresa un usuario nuevo
     */
    private void ingresoUserNuevo(){
        //Obtiene las Strings en los campos de contraseña
        String pass1=new String(passIField.getPassword()),pass2=new String(passIField2.getPassword());
        //Obtiene el nombre del usuario
        String user=userIField.getText();
        //Compara que las contraseñas sean iguales
        if(!user.equals("")&&pass1.equals(pass2)&&!pass1.equals("")){
            try {
                //Manda la orden de ingreso de usuario, si la función retorna 1 significa que se ingresó correctamente
                if(conexion.crearUsuario(user, pass1)==1){
                    //Muestra un mensaje de exito, y limpia
                    DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_INFORMACION, "Ingreso", "Ingreso exitoso");
                    dialogo.setVisible(true);
                    passIField.setText("");
                    passIField2.setText("");
                    userIField.setText("");
                    limpiar();
                }
            } catch (SQLException ex) {
                DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Error", "Error:\n"+ex.toString());
                dialogo.setVisible(true);
            }
        }else{
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Error", "Ingrese adecuadamente los datos");
            dialogo.setVisible(true);
        }
    }
    /**
     * Limpia el JPanel para poner los paneles no usados invisibles
     */
    private void limpiar(){
        eliminarPanel.setVisible(false);
        ingresarPanel.setVisible(false);
        conexionPanel.setVisible(false);
        usuariosPanel1.setVisible(false);
        ingresarPanel.setLocation(eliminarPanel.getBounds().x, eliminarPanel.getBounds().y);
        conexionPanel.setLocation(eliminarPanel.getBounds().x, eliminarPanel.getBounds().y);
        gesConButton.setEnabled(true);
        gesUsuariosButton.setEnabled(true);
        //Limpiamos los campos de texto
        ipField.setText("");
        userField.setText("");
        passField.setText("");
        bdField.setText("");
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Minimizar;
    private javax.swing.JLabel Salir;
    private javax.swing.JTextField bdField;
    private javax.swing.JPanel conexionPanel;
    private javax.swing.JPanel eliminarPanel;
    private javax.swing.JLabel gesConButton;
    private javax.swing.JLabel gesUsuariosButton;
    private javax.swing.JLabel guardarDBButton;
    private javax.swing.JPanel ingresarPanel;
    private javax.swing.JTextField ipField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel logoutButton;
    private javax.swing.JPasswordField passField;
    private javax.swing.JPasswordField passField1;
    private javax.swing.JPasswordField passIField;
    private javax.swing.JPasswordField passIField2;
    private javax.swing.JLabel userEButton;
    private javax.swing.JTextField userField;
    private javax.swing.JLabel userIButtton;
    private javax.swing.JTextField userIField;
    private javax.swing.JComboBox<String> usuariosCombo1;
    private javax.swing.JPanel usuariosPanel1;
    private javax.swing.JLabel verUsElButton;
    private javax.swing.JLabel verUsInButton;
    private javax.swing.JLabel verUsModButton;
    // End of variables declaration//GEN-END:variables
}
