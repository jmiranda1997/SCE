/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Excepciones.NoSePuedeConectar;
import RobertoPruebas.*;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juampa
 */
public class Ausencias extends javax.swing.JPanel {
    Conexion conexion;
    /**
     * Creates new form Clientes
     */
    public Ausencias() {
        initComponents();
    }
    /**
     * Crea un nuevo panel de clientes
     * @param conexion objeto para conectarse a la BD
     */
    public Ausencias(Conexion conexion){
        initComponents();
        this.conexion=conexion;
        //Inicia los paneles invisibles, para que se seleccione una opcion
        listadoPanel.setVisible(false);
        generalPanel.setVisible(false);
        //Limpia el formulario
        limpiar();
    }
    /**
     * Limpia el formulario
     */
    private void limpiar(){
        //Pone los botones de opcion como negros
        ingresarButton.setBackground(Color.BLACK);
        modificarButton.setBackground(Color.BLACK);
        eliminarButton.setBackground(Color.BLACK);
        verButton.setBackground(Color.BLACK);
        //Limpia el JTextArea
        descripcionArea.setText("");
        //Limpia el datePicker
        fechaDate.setDate(null);
        //Pone la fecha de hoy al datePicker
        Calendar calendario= Calendar.getInstance();
        fechaDate.setDate(calendario.getTime());
        //Limpia el comboBox
        int tamano=trabajadoresCombo.getModel().getSize();
        for (int i = 0; i < tamano; i++) {
            trabajadoresCombo.removeItemAt(0);
        }
        //Setea un modelo vacio a la tabla
        listadoTable.setModel(new DefaultTableModel());
        listadoPanel.setEnabled(true);
    }
    /**
     * Carga los datos de la fila seleccionada en los campos, si se esta en modo modificación
     */
    private void filaSeleccionada(){
        if(modificarButton.getBackground()==Color.RED){
            int seleccion=listadoTable.getSelectedRow();
            if(seleccion!=-1)
            trabajadoresCombo.requestFocus();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ingresarButton = new javax.swing.JLabel();
        modificarButton = new javax.swing.JLabel();
        generalPanel = new javax.swing.JPanel();
        lbl_codigo = new javax.swing.JLabel();
        lbl_codigo1 = new javax.swing.JLabel();
        lbl_codigo4 = new javax.swing.JLabel();
        generalButton = new javax.swing.JLabel();
        fechaDate = new com.toedter.calendar.JDateChooser();
        trabajadoresCombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        descripcionArea = new javax.swing.JTextArea();
        autorizadoCheck = new javax.swing.JCheckBox();
        eliminarButton = new javax.swing.JLabel();
        verButton = new javax.swing.JLabel();
        listadoPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadoTable = new javax.swing.JTable();
        lbl_codigo6 = new javax.swing.JLabel();
        Minimizar = new javax.swing.JLabel();
        Salir = new javax.swing.JLabel();
        chequeCheck2 = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(0, 0, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ingresarButton.setBackground(new java.awt.Color(0, 0, 0));
        ingresarButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        ingresarButton.setForeground(new java.awt.Color(255, 255, 255));
        ingresarButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ingresarButton.setText("INGRESO");
        ingresarButton.setName(""); // NOI18N
        ingresarButton.setOpaque(true);
        ingresarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingresarButtonMouseClicked(evt);
            }
        });
        add(ingresarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 50));

        modificarButton.setBackground(new java.awt.Color(0, 0, 0));
        modificarButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        modificarButton.setForeground(new java.awt.Color(255, 255, 255));
        modificarButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        modificarButton.setText("MODIFICACION");
        modificarButton.setName(""); // NOI18N
        modificarButton.setOpaque(true);
        modificarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modificarButtonMouseClicked(evt);
            }
        });
        add(modificarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 160, 50));

        generalPanel.setOpaque(false);

        lbl_codigo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lbl_codigo.setForeground(new java.awt.Color(255, 255, 255));
        lbl_codigo.setText("Fecha:");

        lbl_codigo1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lbl_codigo1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_codigo1.setText("Descripción/Motivo:");

        lbl_codigo4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lbl_codigo4.setForeground(new java.awt.Color(255, 255, 255));
        lbl_codigo4.setText("Trabajador:");

        generalButton.setBackground(new java.awt.Color(255, 0, 0));
        generalButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        generalButton.setForeground(new java.awt.Color(255, 255, 255));
        generalButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generalButton.setText("GUARDAR");
        generalButton.setName(""); // NOI18N
        generalButton.setOpaque(true);
        generalButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generalButtonMouseClicked(evt);
            }
        });

        fechaDate.setDateFormatString("yyyy/MM/dd");
        fechaDate.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        trabajadoresCombo.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N

        descripcionArea.setColumns(20);
        descripcionArea.setRows(5);
        jScrollPane2.setViewportView(descripcionArea);

        autorizadoCheck.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        autorizadoCheck.setForeground(new java.awt.Color(255, 255, 255));
        autorizadoCheck.setText("¿Se le autorizó?");
        autorizadoCheck.setOpaque(false);

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_codigo4)
                            .addComponent(lbl_codigo))
                        .addGap(94, 94, 94)
                        .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(trabajadoresCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechaDate, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lbl_codigo1)
                        .addGap(18, 18, 18)
                        .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autorizadoCheck)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(generalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_codigo4)
                    .addComponent(trabajadoresCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fechaDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_codigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_codigo1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(autorizadoCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(generalPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 770, 270));

        eliminarButton.setBackground(new java.awt.Color(0, 0, 0));
        eliminarButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        eliminarButton.setForeground(new java.awt.Color(255, 255, 255));
        eliminarButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eliminarButton.setText("ELIMINACIÓN");
        eliminarButton.setName(""); // NOI18N
        eliminarButton.setOpaque(true);
        eliminarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarButtonMouseClicked(evt);
            }
        });
        add(eliminarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 160, 50));

        verButton.setBackground(new java.awt.Color(0, 0, 0));
        verButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        verButton.setForeground(new java.awt.Color(255, 255, 255));
        verButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        verButton.setText("VER AUSENCIAS");
        verButton.setName(""); // NOI18N
        verButton.setOpaque(true);
        verButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verButtonMouseClicked(evt);
            }
        });
        add(verButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, 190, 50));

        listadoPanel.setOpaque(false);

        listadoTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        listadoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        listadoTable.setGridColor(new java.awt.Color(0, 0, 0));
        listadoTable.setRowHeight(24);
        listadoTable.setSelectionBackground(new java.awt.Color(255, 0, 0));
        listadoTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        listadoTable.setShowVerticalLines(false);
        listadoTable.getTableHeader().setReorderingAllowed(false);
        listadoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listadoTableMousePressed(evt);
            }
        });
        listadoTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listadoTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(listadoTable);

        lbl_codigo6.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lbl_codigo6.setForeground(new java.awt.Color(255, 255, 255));
        lbl_codigo6.setText("Listado de ausencias:");

        javax.swing.GroupLayout listadoPanelLayout = new javax.swing.GroupLayout(listadoPanel);
        listadoPanel.setLayout(listadoPanelLayout);
        listadoPanelLayout.setHorizontalGroup(
            listadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listadoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listadoPanelLayout.createSequentialGroup()
                        .addComponent(lbl_codigo6)
                        .addContainerGap(723, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        listadoPanelLayout.setVerticalGroup(
            listadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listadoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_codigo6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        add(listadoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 920, 310));

        Minimizar.setForeground(new java.awt.Color(255, 255, 255));
        Minimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSCE/minus-symbol.png"))); // NOI18N
        Minimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizarMouseClicked(evt);
            }
        });
        add(Minimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, -1, -1));

        Salir.setBackground(new java.awt.Color(0, 0, 0));
        Salir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosSCE/cancel (2).png"))); // NOI18N
        Salir.setOpaque(true);
        Salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalirMouseClicked(evt);
            }
        });
        add(Salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, -1, -1));

        chequeCheck2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        chequeCheck2.setForeground(new java.awt.Color(255, 255, 255));
        chequeCheck2.setText("¿Se le acepta cheque?");
        chequeCheck2.setOpaque(false);
        add(chequeCheck2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void ingresarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresarButtonMouseClicked
        //Limpia el formulario
        limpiar();
        //Setea el boton de ingresar como rojo
        ingresarButton.setBackground(Color.RED);
        //Muestra los paneles
        listadoPanel.setEnabled(false);
        listadoPanel.setVisible(true);
        generalPanel.setVisible(true);
        //Cambia el texto del botón
        generalButton.setText("Ingresar");
        generalButton.setEnabled(true);
        //Pone el foco en el texto de DPI
        trabajadoresCombo.requestFocus();
        
    }//GEN-LAST:event_ingresarButtonMouseClicked

    private void modificarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modificarButtonMouseClicked
        try {
            //limpia el formulario
            limpiar();
            //Setea el color del boton a rojo
            modificarButton.setBackground(Color.RED);
            //Muestra los paneles
            listadoPanel.setVisible(true);
            generalPanel.setVisible(true);
            //Obtiene la lista de clientes y la setea en la tabla
            listadoTable.setModel(conexion.obtenerAusencias());
            //Setea el texto del boton
            generalButton.setText("Actualizar Datos");
            generalButton.setEnabled(true);
            //Pone el foco en la tabla
            listadoTable.requestFocus();
        } catch (SQLException|NoSePuedeConectar ex) {
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Modificación", "Error:\n"+ex.toString());
            dialogo.setVisible(true);
        }
    }//GEN-LAST:event_modificarButtonMouseClicked

    private void eliminarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarButtonMouseClicked
        try {
            //Limpia el formulario
            limpiar();
            //Pone el color del boton en rojo y muestra los paneles
            eliminarButton.setBackground(Color.RED);
            listadoPanel.setVisible(true);
            generalPanel.setVisible(true);
            //Cambia el texto del botón
            generalButton.setText("Eliminar Selección");
            generalButton.setEnabled(true);
            //Obtiene la lista de clientes y la pone en la tabla, pone el foco en la misma
            listadoTable.setModel(conexion.obtenerAusencias());
            listadoTable.requestFocus();
        } catch (SQLException|NoSePuedeConectar ex) {
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Eliminación", "Error:\n"+ex.toString());
            dialogo.setVisible(true);
        }
    }//GEN-LAST:event_eliminarButtonMouseClicked

    private void verButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verButtonMouseClicked
        try {
            //Limpia el formulario
            limpiar();
            //Cambia el color del boton a rojo
            verButton.setBackground(Color.RED);
            //Obtiene la lista de clientes y la pone en la tabla
            listadoTable.setModel(conexion.obtenerTrabajadoresJP());
            //Muestra los paneles
            listadoPanel.setVisible(true);
            generalPanel.setVisible(true);
            //Inhabilita el botón
            generalButton.setEnabled(false);
        } catch (SQLException|NoSePuedeConectar ex) {
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Visualización", "Error:\n"+ex.toString());
            dialogo.setVisible(true);
        }
    }//GEN-LAST:event_verButtonMouseClicked

    private void listadoTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadoTableMousePressed
        filaSeleccionada();
    }//GEN-LAST:event_listadoTableMousePressed

    private void listadoTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listadoTableKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode()== KeyEvent.VK_DOWN)
        {
            filaSeleccionada();
        }
    }//GEN-LAST:event_listadoTableKeyReleased

    private void generalButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generalButtonMouseClicked
        try {
            //Si esta en modo ingreso, modificación o eliminación, hace cosas distintas
            //Se comprueba en que modo está
            if(ingresarButton.getBackground()==Color.RED){
                //Comprobamos que hayan al menos ciertos datos
                if(trabajadoresCombo.getSelectedIndex()!=-1&&fechaDate.getDate()!=null){
                    //Crea las fechas como Strings
                    String fecha="";
                    if(fechaDate.getDate()!=null)
                        fecha=""+(1900+fechaDate.getDate().getYear())+"-"+(1+fechaDate.getDate().getMonth())+"-"+fechaDate.getDate().getDate();
                    //Obtenemos el ID del trabajador
                    String[] trabajadorSeparado=trabajadoresCombo.getSelectedItem().toString().split("-");
                    String idTrabajador=trabajadorSeparado[trabajadorSeparado.length-1];
                    //Hace el ingreso a la BD
                    int resultado=conexion.ingresarAusencia(Integer.parseInt(idTrabajador),fecha,descripcionArea.getText().trim(),autorizadoCheck.isSelected());
                    //Si el resultado es 1, significa que si se ingreso, si es 0 que no (ya existe)
                    if(resultado==1){
                        DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_INFORMACION, "Ingreso", "Se ha ingresado correctamente");
                        dialogo.setVisible(true);
                        //Limpia el formulario
                        limpiar();
                    }
                    else if(resultado==0){
                        DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Ingreso", "Este trabajador ya existe");
                        dialogo.setVisible(true);
                    }
                }else{
                    DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Ingreso", "Debe ingresar al menos el trabajador y la fecha\nVerifique que todos los campos estén ingresados correctamente");
                    dialogo.setVisible(true);
                    trabajadoresCombo.requestFocus();
                }
            }else if(modificarButton.getBackground()==Color.RED){
                //compruba que hayan un mínimo de datos ingresados
                if(trabajadoresCombo.getSelectedIndex()!=-1&&fechaDate.getDate()!=null){
                    //Crea las fechas como Strings
                    String fecha="";
                    if(fechaDate.getDate()!=null)
                        fecha=""+(1900+fechaDate.getDate().getYear())+"-"+(1+fechaDate.getDate().getMonth())+"-"+fechaDate.getDate().getDate();
                    //Obtenemos el ID del trabajador
                    String[] trabajadorSeparado=trabajadoresCombo.getSelectedItem().toString().split("-");
                    String idTrabajador=trabajadorSeparado[trabajadorSeparado.length-1];
                    //Hace la consulta de modificación y devuelve el número de filas cambiadas (Debe de ser 1)
                    int filasMod=conexion.modificarAusencia(Integer.parseInt(listadoTable.getValueAt(listadoTable.getSelectedRow(),0).toString()),Integer.parseInt(idTrabajador),fecha,descripcionArea.getText().trim(),autorizadoCheck.isSelected());
                    DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_INFORMACION, "Modificación", "Se ha actualizado correctamente\nRegistros actualizados: "+filasMod);
                    dialogo.setVisible(true);
                    //Limpia el formulario
                    limpiar();
                }else{
                    DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Modificación", "Debe ingresar al menos el DPI, Nombre, Apellido, Dirección y Telefono\nVerifique que todos los campos estén ingresados correctamente");
                    dialogo.setVisible(true);
                    trabajadoresCombo.requestFocus();
                }
            }else if(eliminarButton.getBackground()==Color.RED)
            {
                //Muestra un dialogo para confirmar si se quiere borrar el cliente
                DialogoOpcion dialogo = new DialogoOpcion(null, true, DialogoOpcion.ICONO_INTERROGANTE,"Eliminación", "¿Esta seguro de eliminar al cliente seleccionado?");
                dialogo.setVisible(true);
                //Si se acepta, entonces lo borra
                if(dialogo.isAceptar()){
                    //Manda la orden de eliminación a la BD, devuelve el número de filas cambiadas
                    int filasMod=conexion.eliminarTrabajador(Integer.parseInt(listadoTable.getValueAt(listadoTable.getSelectedRow(),0).toString()));
                    dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_INFORMACION, "Eliminación", "Se ha eliminado al cliente\nRegistros actualizados: "+filasMod);
                    dialogo.setVisible(true);
                    //Limpia el formulario
                    limpiar();
                }
            }
        } catch (SQLException|NoSePuedeConectar ex) {
            DialogoOpcion dialogo= new DialogoOpcion(null, true, DialogoOpcion.ICONO_ERROR, "Ingreso", "Error:\n"+ex.toString());
            dialogo.setVisible(true);
        }
        
    }//GEN-LAST:event_generalButtonMouseClicked

    private void MinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizarMouseClicked
        //Obtenemos los contenedores padres, hasta obtener el JFrame donde se está trabajando
        JFrame padre= (JFrame)this.getParent().getParent().getParent().getParent().getParent();
        //Se le manda la orden de minimizar
        padre.setExtendedState(1);
    }//GEN-LAST:event_MinimizarMouseClicked

    private void SalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirMouseClicked
        System.exit(0);
    }//GEN-LAST:event_SalirMouseClicked
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Minimizar;
    private javax.swing.JLabel Salir;
    private javax.swing.JCheckBox autorizadoCheck;
    private javax.swing.JCheckBox chequeCheck2;
    private javax.swing.JTextArea descripcionArea;
    private javax.swing.JLabel eliminarButton;
    private com.toedter.calendar.JDateChooser fechaDate;
    private javax.swing.JLabel generalButton;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JLabel ingresarButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_codigo;
    private javax.swing.JLabel lbl_codigo1;
    private javax.swing.JLabel lbl_codigo4;
    private javax.swing.JLabel lbl_codigo6;
    private javax.swing.JPanel listadoPanel;
    private javax.swing.JTable listadoTable;
    private javax.swing.JLabel modificarButton;
    private javax.swing.JComboBox<String> trabajadoresCombo;
    private javax.swing.JLabel verButton;
    // End of variables declaration//GEN-END:variables
}
